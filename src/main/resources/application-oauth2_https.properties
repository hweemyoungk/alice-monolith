logging.level.org.springframework.security=DEBUG

#spring.security.oauth2.client.registration.google.client-id=803588650841-4c45a5c7nru2075oggaitvl1qgav2tbc.apps.googleusercontent.com
#spring.security.oauth2.client.registration.google.client-secret=${googleClientSecret}
#spring.security.oauth2.client.registration.google.scope[0]=openid
#spring.security.oauth2.client.registration.google.scope[1]=profile
#spring.security.oauth2.client.registration.google.scope[2]=email

# Alice's auth server validates social account oidc token.
#spring.security.oauth2.resourceserver.jwt.issuer-uri=https://accounts.google.com
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs

cards.alice.auth.keycloak-url=https://carol.cards:8180
cards.alice.auth.realm-name=alice-auth-test-1

# Alice auth server uri
#spring.security.oauth2.resourceserver.jwt.jws-algorithms=HS256
#spring.security.oauth2.resourceserver.jwt.issuer-uri=${cards.alice.auth.keycloak-url}/realms/${cards.alice.auth.realm-name} # I fucking don't know why this doesn't work
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${cards.alice.auth.keycloak-url}/realms/${cards.alice.auth.realm-name}/protocol/openid-connect/certs # I fucking don't know why this doesn't work
#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8180/realms/alicia-auth-test-1
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://10.0.2.2:8180/realms/alicia-auth-test-1
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://carol.cards:8180/realms/alicia-auth-test-1/protocol/openid-connect/certs
# To add Athena's certificate to Alice's truststore, run the following command in Alice server.
# /usr/lib/jvm/java-1.17.0-openjdk-amd64/lib/security$ sudo keytool -import -trustcacerts -alias athena-test -file ~/Downloads/carol.cards_cert/carol.cards.crt -keystore cacerts

# Alice opens HTTPS port
#server.ssl.enabled=true
## The format used for the keystore. It could be set to JKS in case it is a JKS file
#server.ssl.key-store-type=PKCS12
## The path to the keystore containing the certificate
#server.ssl.key-store=classpath:keystore/server.keystore
## The password used to generate the certificate
#server.ssl.key-store-password=secret
## The alias mapped to the certificate
#server.ssl.key-alias=server
